<style lang="less">
  @import '../../common/common.less';

  .profile_container {
    background: #fff;
    border-top: 1px solid #fff;

    .bar_container {
      padding: 20px 0 0 20px;
    }

    .author {
      text-align: center;
      padding-top: 10px;
      font-size: 12px;
      color: rgba(0, 0, 0, .4);
      background: rgba(0, 0, 0, .06);
    }
  }
</style>

<template>
  <view class="profile_container">
    <user></user>
    <view class="bar_container">
      <repeat for="{{barInfo}}" key="index" index="index" item="item">
        <userBar :message.sync="item.message" :iconPath.sync="item.iconPath" :navPath.sync="item.navPath"></userBar>
      </repeat>
    </view>
    <view class="author">design by shenyiling</view>
  </view>
</template>

<script>
    import wepy from 'wepy'
    import User from './user'
    import UserBar from './userBar'

    export default class Profile extends wepy.page {
        config = {
            navigationBarTitleText: '个人中心'
        }

        components = {
            user: User,
            userBar: UserBar
        }

        data = {
            a1: '223423',
            a2: '34343',
            barInfo: [
                {
                    iconPath: '../../images/order.png',
                    message: '我的订单',
                    navPath: '/pages/order/index'
                },
                {
                    iconPath: '../../images/quan.png',
                    message: '我的优惠券',
                    navPath: ''
                },
                {
                    iconPath: '../../images/vip.png',
                    message: '领取超级会员',
                    navPath: ''
                },
                {
                    iconPath: '../../images/join.png',
                    message: '加入我们',
                    navPath: '/pages/form/index'
                },
                {
                    iconPath: '../../images/advice.png',
                    message: '意见反馈',
                    navPath: ''
                }
            ]
        }

        onLoad() {
            wepy.showLoading({
                mask: true
            })

            /**
             * TODO: fetch data
             */

            setTimeout(() => {
                wepy.hideLoading()
            }, 1000 * Math.random())
        }
    }
</script>
